{"version":3,"sources":["../node_modules/scania-webcomponents/dist/esm/dropdown-integrated-component.entry.js"],"names":["DropdownIntegratedComponent","hostRef","registerInstance","this","getChangeSelectedItems","createEvent","newValue","options","JSON","parse","dataDidChangeHandler","data","oldValue","selectedValue","event","target","value","emit","listOptions","map","option","h","onChange","onUserSelection","bind","getElement"],"mappings":"mPAEMA,EAA2B,WAC/B,WAAYC,GAAS,oBACnBC,YAAiBC,KAAMF,GACvBE,KAAKC,uBAAyBC,YAAYF,KAAM,yBAA0B,GAH7C,wDAK/B,SAAqBG,GAEjBH,KAAKI,QADiB,kBAAbD,EACME,KAAKC,MAAMH,GAGXA,IAVY,+BAa/B,WACEH,KAAKO,qBAAqBP,KAAKQ,QAdF,oCAgB/B,SAAuBL,EAAUM,GAC3BN,IAAaM,IACfT,KAAKU,cAAgBP,KAlBM,6BAqB/B,SAAgBQ,GAGd,OAFAX,KAAKU,cAAgBC,EAAMC,OAAOC,MAClCb,KAAKC,uBAAuBa,KAAKd,KAAKU,eAC/BV,KAAKU,gBAxBiB,oBA0B/B,WACE,IAAIK,EAAcf,KAAKI,QAAQY,KAAI,SAAAC,GACjC,OAAQC,YAAE,SAAU,CAAEL,MAAOI,GAAUA,MAEzC,MAAO,CAACC,YAAE,SAAU,CAAEC,SAAUnB,KAAKoB,gBAAgBC,KAAKrB,OAASe,MA9BtC,cAgC/B,WAAW,OAAOO,YAAWtB,SAhCE,qBAiC/B,WAAwB,MAAO,CAC7B,KAAQ,CAAC,wBACT,cAAiB,CAAC,+BAnCW","file":"static/js/7.442dcb15.chunk.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-6737dd6f.js';\n\nconst DropdownIntegratedComponent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.getChangeSelectedItems = createEvent(this, \"getChangeSelectedItems\", 7);\n  }\n  dataDidChangeHandler(newValue) {\n    if (typeof newValue === 'string') {\n      this.options = JSON.parse(newValue);\n    }\n    else {\n      this.options = newValue;\n    }\n  }\n  componentWillLoad() {\n    this.dataDidChangeHandler(this.data);\n  }\n  onSelectedValueChanged(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.selectedValue = newValue;\n    }\n  }\n  onUserSelection(event) {\n    this.selectedValue = event.target.value;\n    this.getChangeSelectedItems.emit(this.selectedValue);\n    return this.selectedValue;\n  }\n  render() {\n    let listOptions = this.options.map(option => {\n      return (h(\"option\", { value: option }, option));\n    });\n    return [h(\"select\", { onChange: this.onUserSelection.bind(this) }, listOptions)];\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"data\": [\"dataDidChangeHandler\"],\n    \"selectedValue\": [\"onSelectedValueChanged\"]\n  }; }\n};\n\nexport { DropdownIntegratedComponent as dropdown_integrated_component };\n"],"sourceRoot":""}